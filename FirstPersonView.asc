
void CellViewSchema::SetView(int width, int height, int row_count, int col_count) {
	if (row_count > CELLVIEW_MAX_ROWS || col_count > CELLVIEW_MAX_COLS) {
		return;
	}

	Width = width;
	Height = height;
	RowCount = row_count;
	ColCount = col_count;
}

void CellViewSchema::SetUniformStrip(int row, int y1, int y2, int x_start, int u_width) {
	if (row < 0 || row >= RowCount) {
		return;
	}

	Strips[row].Y1 = y1;
	Strips[row].Y2 = y2;
	for (int col = 0; col < ColCount; ++col) {
		Strips[row].X[col] = x_start + u_width * col;
	}
}

CellViewSchema CV_Schema;
export CV_Schema;


static void FirstPersonView::DrawViewport(DrawingSurface* ds, int color) {
	ds.DrawingColor = color;
	ds.DrawFrame(0, 0, CV_Schema.Width - 1, CV_Schema.Height - 1);
}

static void FirstPersonView::DrawGridFrame(DrawingSurface* ds, int cell_color, int wall_color) {
	if (cell_color > 0) {
		ds.DrawingColor = cell_color;
		// NOTE: we assume that row 0 is "behind" the player's back, so invisible
		// horizontal lines (cells fronts)
		for (int row = 1; row < CV_Schema.RowCount; ++row) {
			for (int col = 0; col < CV_Schema.ColCount - 1; ++col) {
				ds.DrawLine(CV_Schema.Strips[row].X[col], 
							CV_Schema.Strips[row].Y1, 
							CV_Schema.Strips[row].X[col + 1], 
							CV_Schema.Strips[row].Y1);
				ds.DrawLine(CV_Schema.Strips[row].X[col], 
							CV_Schema.Strips[row].Y2, 
							CV_Schema.Strips[row].X[col + 1], 
							CV_Schema.Strips[row].Y2);
			}
		}
		
		// directional lines (cell sides)
		for (int row = 0; row < CV_Schema.RowCount - 1; ++row) {
			for (int col = 0; col < CV_Schema.ColCount; ++col) {
				ds.DrawLine(CV_Schema.Strips[row].X[col], 
							CV_Schema.Strips[row].Y1, 
							CV_Schema.Strips[row + 1].X[col], 
							CV_Schema.Strips[row + 1].Y1);
				ds.DrawLine(CV_Schema.Strips[row].X[col], 
							CV_Schema.Strips[row].Y2, 
							CV_Schema.Strips[row + 1].X[col], 
							CV_Schema.Strips[row + 1].Y2);
			}
		}
	}
	
	if (wall_color > 0) {
		ds.DrawingColor = wall_color;
		for (int row = 0; row < CV_Schema.RowCount; ++row) {
			for (int col = 0; col < CV_Schema.ColCount; ++col) {
				ds.DrawLine(CV_Schema.Strips[row].X[col], 
							CV_Schema.Strips[row].Y1, 
							CV_Schema.Strips[row].X[col], 
							CV_Schema.Strips[row].Y2);
			}
		}
	}
}
